# Custom functions

# Trash list
tl() {
    echo -e "Trash:"
    ls -lh ~/.local/share/Trash/files/
}

# trashman: empty
te() {

    if [[ "$(ls ~/.local/share/Trash/files/)" == "total 0" ]]; then
        echo "Trash is empty."
    else
        echo -e "Are you sure you want to remove these files? (y = yes)"
        trash --list
        read answer_trash
        if [[ $answer_trash == "y" ]] || [[ $answer_trash == "Y" ]]; then
            trash --empty
            echo -e "Trash is empty."
        else
            echo -e "Trash hasn't been emptied."
        fi
    fi
}

# List custom aliases
lsalias() {
    cat ~/.zshrc | grep '^alias'
}

# Downaload bbtv
bbtv() {
 youtube-dl -o "~/downloads/%(title)s.%(ext)s" http://www.bbtv.hu/bbtv-$1
}

# Colored man pages (https://wiki.archlinux.org/index.php/Man_page#Using_less_.28Recommended.29)
man() {
    env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;74m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_so=$'\E[38;5;246m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    man "$@"
}

lsgrep() {

    ls -lh --color=auto | grep $1

}

lsdir() {

    ls -lh --color=auto $HOME/$1

}

volume-switcher() {

vol_state=$(amixer get Master | egrep Playback | egrep -o off)

    if [[ $vol_state == "off" ]]; then
        amixer sset Master unmute > /dev/null
    else
        amixer sset Master mute > /dev/null
    fi

}

find-file(){

    find ~ -type f -iname $1\*

}

find-dir(){

    find ~ -type d -iname $1\*

}

find-by-file-type(){

    find ~ -iname "*.$1"

}

find-by-name(){

    find ~ -iname $1\*

}

quick-backup(){

    cp -r $@ ~/backup

}

fehbg(){

    feh --bg-fill $1

}

strgrep(){

    grep -rnw $1 -e "$2"
    matches=$(grep -ro $2 $1 | wc -w)
    echo "Total matches: $matches"
}

takef(){

    touch $1
    $EDITOR $1

}

takesh(){

    touch ~/scripts/$1
    chmod +x ~/scripts/$1
    echo "#!/bin/bash" > ~/scripts/$1
    $EDITOR ~/scripts/$1

}

free_space(){

    root_dir=$(df -h / | tail -1 | awk '{print $4}')
    home_dir=$(df -h /home | tail -1 | awk '{print $4}')

    echo -e "Free space available\n\\ \t\t $root_dir\n\\home\t\t $home_dir"

}

bbdl() {

    start_date=$(date)
    num_days=5
    for i in $(seq 0 $num_days)
    do
        date=$(date +"%y%m%d" -d "${start_date}+${i} days")
        wget -P ~/downloads http://video.builder.hu/bunny/bb.radio_$date.mp3
    done

}

fda() {

    local dir
    dir=$(find ${1:-.} -type d 2> /dev/null | fzf --header="Change dir") && cd "$dir"

}

fds(){

    selected_file=$(find ~/downloads \( -iregex ".+\.\(mkv\|mp4\|srt\)" ! -iname "sample.mkv" \) | awk -F "/" '{print $NF}' | sort | fzf --header="Download subtitle")

    if [[ ! -z "$selected_file" ]]; then
        selected_file_full_path=$(find ~/downloads/ -iname $(echo "$selected_file" | sed 's/ /\ /g;s/\[/\\[/g;s/\]/\\]/'))
        periscope -l en "$selected_file_full_path"
    fi

}

fzf-vim-open() {

    dirs=(~/dotfiles ~/documents ~/scripts ~/.config/firefoxnewtab ~/.config/spotymenu ~/.config/youtube-dl ~/.config/i3 ~/.config/i3blocks/config)
    list=$(find "${dirs[@]}" -type f ! -iregex ".*[/]\.git[/]?.*\|^.+\.png$\|^.+\.jpg$\|^.+\.psd$\|^.+\.pdf$\|^.+\.odt$\|^.+\.ods$\|^.+\.docx?$\|^.+\.xlsx?$\|^.+\.epub$\|^.+\.mobi$\|^.+\.svg$\|^.+\.celtx$" | fzf --header "Edit file")
    # Run Vim only if something was selected
    [[ ! -z $list ]] && echo "$list" | xargs bash -c '</dev/tty vim "$@"' ignoreme

}
zle -N fzf-vim-open
bindkey ^O fzf-vim-open

fzf-history () { RBUFFER=$(fc -ln -500 | fzf --tac --no-sort --header="History") $RBUFFER; }
zle -N fzf-history
bindkey ^s fzf-history

news(){

    if [[ $DISPLAY = ":0" ]]; then
        #urxvtc -name newsbeuter -e newsbeuter -C ~/.newsbeuter/config_x
        newsbeuter -C ~/.newsbeuter/config_x
    else
        newsbeuter -C ~/.newsbeuter/config_tty
    fi
}
